name: Build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

env:
  LIBEBUR128_VERSION: v1.2.6

jobs:
  build-windows-x64:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Clone libebur128
        run: |
          git clone --depth 1 --branch ${{ env.LIBEBUR128_VERSION }} https://github.com/jiixyj/libebur128.git
      
      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v2
      
      - name: Build libebur128 x64
        run: |
          cd libebur128
          mkdir build
          cd build
          cmake .. -A x64 -DCMAKE_POLICY_VERSION_MINIMUM="3.5" -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=install
          cmake --build . --config Release
          cmake --install . --config Release
      
      - name: Upload Windows x64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: libebur128-windows-x64
          path: libebur128/build/install/bin/ebur128.dll

  build-windows-x86:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Clone libebur128
        run: |
          git clone --depth 1 --branch ${{ env.LIBEBUR128_VERSION }} https://github.com/jiixyj/libebur128.git
      
      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v2
      
      - name: Build libebur128 x86
        run: |
          cd libebur128
          mkdir build
          cd build
          cmake .. -A Win32 -DCMAKE_POLICY_VERSION_MINIMUM="3.5" -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=install
          cmake --build . --config Release
          cmake --install . --config Release
      
      - name: Upload Windows x86 artifact
        uses: actions/upload-artifact@v4
        with:
          name: libebur128-windows-x86
          path: libebur128/build/install/bin/ebur128.dll

  build-windows-arm64:
    runs-on: windows-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Clone libebur128
        run: |
          git clone --depth 1 --branch ${{ env.LIBEBUR128_VERSION }} https://github.com/jiixyj/libebur128.git
      
      - name: Setup MSVC
        uses: microsoft/setup-msbuild@v2
      
      - name: Fix MSVC compatibility for ARM64
        run: |
          cd libebur128
          # Replace #warning with #pragma message for MSVC compatibility
          (Get-Content ebur128/ebur128.c) -replace '#warning', '#pragma message' | Set-Content ebur128/ebur128.c
      
      - name: Build libebur128 ARM64
        run: |
          cd libebur128
          mkdir build
          cd build
          cmake .. -A ARM64 -DCMAKE_POLICY_VERSION_MINIMUM="3.5" -DCMAKE_POLICY_DEFAULT_CMP0091=NEW -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreadedDLL -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=install
          cmake --build . --config Release
          cmake --install . --config Release
      
      - name: Upload Windows ARM64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: libebur128-windows-arm64
          path: libebur128/build/install/bin/ebur128.dll

  build-macos-intel:
    runs-on: macos-13
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Clone libebur128
        run: |
          git clone --depth 1 --branch ${{ env.LIBEBUR128_VERSION }} https://github.com/jiixyj/libebur128.git
      
      - name: Build libebur128 for x86_64
        run: |
          cd libebur128
          mkdir build-x86_64
          cd build-x86_64
          cmake .. \
            -DCMAKE_POLICY_VERSION_MINIMUM="3.5" \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_OSX_ARCHITECTURES=x86_64 \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=10.9 \
            -DCMAKE_INSTALL_PREFIX=install
          cmake --build . --config Release
          cmake --install . --config Release
      
      - name: Upload macOS Intel artifact
        uses: actions/upload-artifact@v4
        with:
          name: libebur128-macos-intel
          path: libebur128/build-x86_64/install/lib/libebur128.dylib

  build-macos-arm64:
    runs-on: macos-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Clone libebur128
        run: |
          git clone --depth 1 --branch ${{ env.LIBEBUR128_VERSION }} https://github.com/jiixyj/libebur128.git
      
      - name: Build libebur128 for arm64
        run: |
          cd libebur128
          mkdir build-arm64
          cd build-arm64
          cmake .. \
            -DCMAKE_POLICY_VERSION_MINIMUM="3.5" \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_OSX_ARCHITECTURES=arm64 \
            -DCMAKE_OSX_DEPLOYMENT_TARGET=11.0 \
            -DCMAKE_INSTALL_PREFIX=install
          cmake --build . --config Release
          cmake --install . --config Release
      
      - name: Upload macOS ARM64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: libebur128-macos-arm64
          path: libebur128/build-arm64/install/lib/libebur128.dylib

  build-linux-x86-64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install dependencies
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y cmake build-essential
      
      - name: Clone libebur128
        run: |
          git clone --depth 1 --branch ${{ env.LIBEBUR128_VERSION }} https://github.com/jiixyj/libebur128.git
      
      - name: Build libebur128
        run: |
          cd libebur128
          mkdir build
          cd build
          cmake .. \
            -DCMAKE_POLICY_VERSION_MINIMUM="3.5" \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            -DCMAKE_INSTALL_PREFIX=install
          cmake --build . --config Release
          cmake --install . --config Release
      
      - name: Upload Linux x86-64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: libebur128-linux-x86-64
          path: libebur128/build/install/lib/libebur128.so

  build-linux-x86:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Enable 32-bit architecture and install dependencies
        run: |
          sudo dpkg --add-architecture i386
          sudo apt-get update -qq
          sudo apt-get install -y cmake build-essential gcc-multilib g++-multilib libc6-dev-i386
      
      - name: Clone libebur128
        run: |
          git clone --depth 1 --branch ${{ env.LIBEBUR128_VERSION }} https://github.com/jiixyj/libebur128.git
      
      - name: Build libebur128 for x86
        run: |
          cd libebur128
          mkdir build
          cd build
          cmake .. \
            -DCMAKE_POLICY_VERSION_MINIMUM="3.5" \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            -DCMAKE_C_FLAGS=-m32 \
            -DCMAKE_CXX_FLAGS=-m32 \
            -DCMAKE_INSTALL_PREFIX=install
          cmake --build . --config Release
          cmake --install . --config Release
      
      - name: Upload Linux x86 artifact
        uses: actions/upload-artifact@v4
        with:
          name: libebur128-linux-x86
          path: libebur128/build/install/lib/libebur128.so

  build-linux-arm64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install cross-compilation tools
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y cmake build-essential gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
      
      - name: Clone libebur128
        run: |
          git clone --depth 1 --branch ${{ env.LIBEBUR128_VERSION }} https://github.com/jiixyj/libebur128.git
      
      - name: Create toolchain file
        run: |
          cat > toolchain-aarch64.cmake << EOF
          set(CMAKE_SYSTEM_NAME Linux)
          set(CMAKE_SYSTEM_PROCESSOR aarch64)
          set(CMAKE_C_COMPILER aarch64-linux-gnu-gcc)
          set(CMAKE_CXX_COMPILER aarch64-linux-gnu-g++)
          set(CMAKE_FIND_ROOT_PATH /usr/aarch64-linux-gnu)
          set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
          set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
          set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
          EOF
      
      - name: Build libebur128
        run: |
          cd libebur128
          mkdir build
          cd build
          cmake .. \
            -DCMAKE_POLICY_VERSION_MINIMUM="3.5" \
            -DCMAKE_BUILD_TYPE=Release \
            -DBUILD_SHARED_LIBS=ON \
            -DCMAKE_POSITION_INDEPENDENT_CODE=ON \
            -DCMAKE_TOOLCHAIN_FILE=../../toolchain-aarch64.cmake \
            -DCMAKE_INSTALL_PREFIX=install
          cmake --build . --config Release
          cmake --install . --config Release
      
      - name: Upload Linux ARM64 artifact
        uses: actions/upload-artifact@v4
        with:
          name: libebur128-linux-arm64
          path: libebur128/build/install/lib/libebur128.so

  build-jar:
    needs: [build-windows-x64, build-windows-x86, build-windows-arm64, build-macos-intel, build-macos-arm64, build-linux-x86-64, build-linux-x86, build-linux-arm64]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'
      
      - name: Create native directories
        run: |
          mkdir -p src/main/resources/win32-x86-64
          mkdir -p src/main/resources/win32-x86
          mkdir -p src/main/resources/win32-aarch64
          mkdir -p src/main/resources/darwin-x86-64
          mkdir -p src/main/resources/darwin-aarch64
          mkdir -p src/main/resources/linux-x86-64
          mkdir -p src/main/resources/linux-x86
          mkdir -p src/main/resources/linux-aarch64
      
      - name: Download Windows x64 artifact
        uses: actions/download-artifact@v4
        with:
          name: libebur128-windows-x64
          path: src/main/resources/win32-x86-64/
      
      - name: Download Windows x86 artifact
        uses: actions/download-artifact@v4
        with:
          name: libebur128-windows-x86
          path: src/main/resources/win32-x86/
      
      - name: Download Windows ARM64 artifact
        uses: actions/download-artifact@v4
        with:
          name: libebur128-windows-arm64
          path: src/main/resources/win32-aarch64/
      
      - name: Download macOS Intel artifact
        uses: actions/download-artifact@v4
        with:
          name: libebur128-macos-intel
          path: src/main/resources/darwin-x86-64/
      
      - name: Download macOS ARM64 artifact
        uses: actions/download-artifact@v4
        with:
          name: libebur128-macos-arm64
          path: src/main/resources/darwin-aarch64/
      
      - name: Download Linux x86-64 artifact
        uses: actions/download-artifact@v4
        with:
          name: libebur128-linux-x86-64
          path: src/main/resources/linux-x86-64/
      
      - name: Download Linux x86 artifact
        uses: actions/download-artifact@v4
        with:
          name: libebur128-linux-x86
          path: src/main/resources/linux-x86/
      
      - name: Download Linux ARM64 artifact
        uses: actions/download-artifact@v4
        with:
          name: libebur128-linux-arm64
          path: src/main/resources/linux-aarch64/
      
      - name: Build with Maven
        run: mvn clean package -B
      
      - name: Upload JAR artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ebur128java
          path: target/*.jar
